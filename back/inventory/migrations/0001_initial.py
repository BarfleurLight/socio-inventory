# Generated by Django 5.2.6 on 2025-09-11 11:58

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название атрибута')),
                ('description', models.TextField(blank=True, max_length=200, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Атрибут',
                'verbose_name_plural': 'Атрибуты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Consumables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('cons_type', models.CharField(max_length=200, verbose_name='Тип расходника')),
                ('count', models.IntegerField(default=0, verbose_name='Количество')),
                ('image', models.ImageField(blank=True, null=True, upload_to='consumables/')),
            ],
            options={
                'verbose_name': 'Расходник',
                'verbose_name_plural': 'Расходники',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='Наименование')),
                ('serial_number', models.CharField(max_length=100, unique=True, verbose_name='Серийный номер')),
                ('image', models.ImageField(blank=True, null=True, upload_to='inventory/', verbose_name='Изображение')),
                ('status_real', models.CharField(choices=[('computer', 'Действующий'), ('to_written_off', 'К списанию'), ('written_off', 'Списан')], default='computer', max_length=20, verbose_name='Фактический статус')),
                ('status_doc', models.CharField(choices=[('computer', 'Действующий'), ('to_written_off', 'К списанию'), ('written_off', 'Списан')], default='computer', max_length=20, verbose_name='Статус по документам')),
                ('balance_price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Балансовая стоимость')),
                ('room_real', models.PositiveIntegerField(blank=True, help_text='Номер помещения от 1 до 600', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(600)], verbose_name='Фактическое помещение')),
                ('room_doc', models.PositiveIntegerField(blank=True, help_text='Номер помещения от 1 до 600', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(600)], verbose_name='Помещение по документам')),
            ],
            options={
                'verbose_name': 'Инвентарь',
                'verbose_name_plural': 'Инвентарные объекты',
            },
        ),
        migrations.CreateModel(
            name='IP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(protocol='IPv4', unique=True, verbose_name='IPv4')),
            ],
            options={
                'verbose_name': 'IPv4-адрес',
                'verbose_name_plural': 'IPv4-адреса',
            },
        ),
        migrations.CreateModel(
            name='Responsible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Имя')),
                ('surname', models.CharField(max_length=200, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=200, verbose_name='Отчество')),
            ],
            options={
                'verbose_name': 'Ответственный',
                'verbose_name_plural': 'Ответственные',
            },
        ),
        migrations.CreateModel(
            name='InventoryAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200, verbose_name='Значение')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.attribute', verbose_name='Атрибут')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_attributes', to='inventory.inventory', verbose_name='Инвентарный объект')),
            ],
            options={
                'verbose_name': 'Значение атрибута',
                'verbose_name_plural': 'Значения атрибутов',
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='attributes',
            field=models.ManyToManyField(blank=True, related_name='inventory_items', through='inventory.InventoryAttribute', through_fields=('inventory', 'attribute'), to='inventory.attribute', verbose_name='Дополнительные атрибуты'),
        ),
        migrations.CreateModel(
            name='MAC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message='Введите корректный MAC-адрес', regex='^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$')], verbose_name='MAC-адрес')),
                ('interface', models.CharField(choices=[('ethernet', 'Ethernet'), ('wifi', 'Wi-Fi')], help_text='Тип сетевого интерфейса', max_length=10, verbose_name='Интерфейс')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mac_address', to='inventory.inventory', verbose_name='Инвентарь')),
                ('ip_addresses', models.ManyToManyField(blank=True, related_name='ip_address', to='inventory.ip', verbose_name='IP-адреса')),
            ],
            options={
                'verbose_name': 'MAC-адрес',
                'verbose_name_plural': 'MAC-адреса',
                'ordering': ['inventory', 'interface'],
            },
        ),
        migrations.CreateModel(
            name='Models',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Наименование')),
                ('model_type', models.CharField(choices=[('computer', 'Компьютер'), ('printer', 'Принтер'), ('undefined', 'Не определено')], default='undefined', max_length=20, verbose_name='Тип оборудования')),
                ('image', models.ImageField(blank=True, null=True, upload_to='models/')),
                ('consumables', models.ManyToManyField(blank=True, related_name='models', to='inventory.consumables', verbose_name='Расходники')),
            ],
            options={
                'verbose_name': 'Модель',
                'verbose_name_plural': 'Модели',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='inventory',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='inventory.models', verbose_name='Модель оборудования'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='current_responsible',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items', to='inventory.responsible', verbose_name='Ответственный'),
        ),
        migrations.AddConstraint(
            model_name='inventoryattribute',
            constraint=models.UniqueConstraint(fields=('inventory', 'attribute'), name='unique_inventory_attribute'),
        ),
    ]
